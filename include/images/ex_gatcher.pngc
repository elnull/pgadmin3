#ifndef EX_GATCHER_PNG_H
#define EX_GATCHER_PNG_H

static const unsigned char ex_gatcher_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x32, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x88, 
0xb1, 0x00, 0x00, 0x03, 0xe7, 0x49, 0x44, 0x41, 
0x54, 0x78, 0xda, 0xed, 0x97, 0xcb, 0x4f, 0x53, 
0x51, 0x10, 0xc6, 0xf9, 0x37, 0xfc, 0x03, 0x5c, 
0xbb, 0x73, 0x69, 0xdc, 0xb8, 0x74, 0xe3, 0x5e, 
0x12, 0xe2, 0x6b, 0x21, 0x0b, 0x5d, 0x98, 0x18, 
0x37, 0xf8, 0x42, 0xf0, 0x89, 0x41, 0x51, 0x24, 
0x42, 0x04, 0x14, 0x84, 0x06, 0x44, 0x23, 0x0f, 
0x11, 0xc2, 0xab, 0xa5, 0x95, 0x00, 0x52, 0x9e, 
0x0a, 0x05, 0x5a, 0x0a, 0x97, 0x47, 0x6f, 0x69, 
0x81, 0x10, 0x97, 0xe3, 0xfd, 0xa6, 0x4c, 0x73, 
0xb1, 0xa5, 0x8f, 0x1b, 0x6a, 0x6b, 0xbd, 0x93, 
0x7c, 0x39, 0x61, 0xda, 0x9c, 0xf3, 0xfd, 0xce, 
0xdc, 0x99, 0x5b, 0x72, 0x72, 0xcc, 0x30, 0xc3, 
0x8c, 0xff, 0x27, 0x4a, 0xcb, 0x9c, 0x74, 0xf1, 
0x72, 0xa4, 0x8c, 0xe4, 0xd3, 0x7a, 0x1e, 0x92, 
0x23, 0xa3, 0xdb, 0xd4, 0xd5, 0xad, 0x52, 0x4f, 
0xaf, 0x9f, 0xe5, 0x74, 0x6e, 0xf3, 0x97, 0x27, 
0x26, 0x77, 0xc8, 0xee, 0x08, 0x68, 0x0a, 0xd2, 
0xd0, 0xd0, 0x16, 0xcd, 0xcd, 0xed, 0x72, 0x1e, 
0x2b, 0x3e, 0x83, 0xa6, 0x67, 0x76, 0xc9, 0xe3, 
0xf9, 0xc5, 0xf9, 0x44, 0x40, 0x52, 0x76, 0x1e, 
0x12, 0xd8, 0xb4, 0xee, 0xbd, 0x42, 0x0d, 0x96, 
0x55, 0x56, 0x5f, 0xff, 0x26, 0x7f, 0xd1, 0x66, 
0x0b, 0x50, 0x6b, 0x9b, 0x8f, 0xf5, 0xa5, 0x53, 
0x65, 0x03, 0xc8, 0xe3, 0xe0, 0x01, 0x6b, 0x80, 
0x6c, 0x83, 0x41, 0x3e, 0x14, 0x9b, 0x27, 0x03, 
0x92, 0x92, 0xf3, 0x4c, 0x90, 0x4c, 0x04, 0xc9, 
0x8a, 0x1e, 0xc9, 0x9a, 0xa9, 0x95, 0x75, 0x71, 
0xaf, 0xe1, 0x3c, 0x9d, 0x79, 0x7c, 0x84, 0xb0, 
0xfe, 0xd3, 0x3e, 0xf1, 0x61, 0xb5, 0x35, 0x97, 
0xbf, 0x94, 0xc9, 0x20, 0x71, 0x7d, 0x1a, 0x01, 
0xb1, 0x37, 0x5e, 0xa3, 0xbe, 0x92, 0xe3, 0x11, 
0x32, 0x92, 0x4f, 0x2b, 0x08, 0x4c, 0xec, 0x04, 
0x1d, 0x14, 0x54, 0xdb, 0xc2, 0xc2, 0xdf, 0x92, 
0x0f, 0xac, 0x7f, 0x0e, 0x6b, 0xc7, 0x3f, 0x18, 
0xca, 0x6b, 0xeb, 0xa6, 0xf2, 0x89, 0xe5, 0x5f, 
0xf9, 0x48, 0x5b, 0x3e, 0x2b, 0xe7, 0xd3, 0x0e, 
0x02, 0xf3, 0x1b, 0xcb, 0x95, 0x61, 0xc1, 0x34, 
0xf2, 0x58, 0xd7, 0xdd, 0x15, 0x61, 0xc1, 0x38, 
0xf2, 0x58, 0x57, 0x5d, 0x2f, 0x69, 0x75, 0xee, 
0x05, 0x4b, 0xf5, 0xb6, 0x64, 0x20, 0x88, 0xf7, 
0x75, 0x04, 0xc8, 0xda, 0xc2, 0x2b, 0x96, 0x80, 
0xa0, 0x0a, 0x00, 0x50, 0x7e, 0x96, 0xb1, 0xd4, 
0xa5, 0x0f, 0x87, 0x0f, 0x52, 0x6b, 0xcf, 0x33, 
0x06, 0xa2, 0x01, 0x88, 0x04, 0x04, 0xc6, 0x05, 
0x62, 0x6d, 0xbe, 0x9c, 0x01, 0x90, 0x47, 0x05, 
0x42, 0x10, 0xcf, 0x69, 0x65, 0xe6, 0x19, 0xa9, 
0xee, 0xa6, 0xa4, 0x41, 0x62, 0xfa, 0x34, 0x0a, 
0x12, 0xaf, 0x17, 0x00, 0xa0, 0xef, 0x05, 0xac, 
0xa8, 0x82, 0xea, 0x6e, 0x66, 0x88, 0xe0, 0x5a, 
0x7f, 0xfa, 0x41, 0xd2, 0x35, 0xb5, 0xe2, 0x82, 
0xd4, 0x0d, 0x5f, 0x48, 0xbe, 0x22, 0xda, 0xcd, 
0xa3, 0x12, 0x32, 0x89, 0xa4, 0x22, 0x7c, 0xf3, 
0xda, 0x63, 0xc4, 0xd2, 0x2a, 0x20, 0x37, 0x8f, 
0xd5, 0xb7, 0xd8, 0xc4, 0xda, 0x70, 0x35, 0x52, 
0x60, 0xa5, 0x37, 0xe9, 0x8a, 0xc4, 0xf4, 0x69, 
0x14, 0x24, 0xdc, 0x0b, 0x5a, 0x1f, 0x60, 0x1a, 
0xed, 0xef, 0x85, 0x50, 0x1f, 0xe8, 0x7b, 0x01, 
0x00, 0xde, 0xf1, 0x92, 0x90, 0xc6, 0x9e, 0xd0, 
0xfa, 0x6c, 0x43, 0x0a, 0x40, 0xc6, 0x2e, 0x19, 
0x03, 0xd9, 0x83, 0xd0, 0x8f, 0x53, 0x54, 0x41, 
0x20, 0x96, 0xa7, 0x4a, 0x19, 0x00, 0x79, 0x54, 
0x01, 0x00, 0x22, 0x43, 0x20, 0xb1, 0x7c, 0x1a, 
0x05, 0x91, 0x71, 0x2a, 0x23, 0x55, 0xc6, 0x29, 
0x9a, 0x19, 0x00, 0xac, 0x89, 0xa7, 0x0c, 0xa0, 
0x07, 0xf1, 0x8c, 0x3c, 0x62, 0xa5, 0x04, 0xc4, 
0x32, 0x95, 0x9f, 0x34, 0x48, 0xc2, 0xbd, 0xb0, 
0xdc, 0x13, 0x7a, 0xbf, 0x68, 0x2b, 0xcc, 0xb3, 
0x7e, 0xd4, 0xd3, 0xe6, 0x52, 0x77, 0xd2, 0x20, 
0x31, 0x7d, 0x1a, 0x01, 0x49, 0xd7, 0xd4, 0x8a, 
0xe9, 0x33, 0xaf, 0xec, 0x18, 0x97, 0x2c, 0xb7, 
0xfc, 0x28, 0xf5, 0x39, 0x3a, 0x29, 0x91, 0x9f, 
0xce, 0x72, 0xf3, 0xf2, 0x4e, 0xc0, 0xed, 0x07, 
0x95, 0xd0, 0x14, 0xc2, 0x34, 0x42, 0x25, 0xe4, 
0xf6, 0xe5, 0xe6, 0xb1, 0xae, 0xcd, 0xd4, 0xb3, 
0x56, 0xa7, 0xdf, 0x91, 0x7f, 0xf1, 0x6b, 0x44, 
0x45, 0x0e, 0x3c, 0x4f, 0xf3, 0x05, 0x7f, 0xf0, 
0x09, 0xbf, 0x51, 0x41, 0xae, 0x54, 0x9e, 0xa2, 
0x8a, 0xa1, 0xb3, 0x74, 0xbd, 0xf9, 0x04, 0x55, 
0xb5, 0x16, 0xed, 0x83, 0xc1, 0xa6, 0x9d, 0xfe, 
0x5b, 0x11, 0x9b, 0x87, 0x7a, 0xa1, 0x29, 0x6a, 
0x2f, 0xc0, 0xbc, 0xf4, 0x81, 0x67, 0xf8, 0x01, 
0x3f, 0x46, 0xc8, 0x03, 0xc0, 0xed, 0x28, 0xa6, 
0x45, 0x7b, 0x11, 0x4b, 0x99, 0x7c, 0xbb, 0x0f, 
0x44, 0x20, 0xe4, 0x3c, 0x3d, 0x04, 0x7c, 0xc1, 
0x1f, 0x7c, 0xc2, 0x6f, 0x54, 0x90, 0x87, 0x96, 
0x7c, 0x2a, 0xee, 0x3a, 0x4d, 0x95, 0x63, 0xe7, 
0xe8, 0x46, 0xcb, 0x49, 0x26, 0xc7, 0x46, 0x22, 
0x6c, 0xdc, 0x15, 0xbc, 0xbb, 0x0f, 0x46, 0xc6, 
0x29, 0x00, 0x64, 0x9c, 0x46, 0x80, 0x68, 0x10, 
0x10, 0x00, 0x90, 0x47, 0x15, 0x00, 0xb0, 0x60, 
0x2b, 0x64, 0x29, 0x13, 0xb5, 0x61, 0x10, 0x81, 
0xc0, 0x39, 0x02, 0x22, 0x82, 0x1f, 0xf8, 0x82, 
0x3f, 0xf8, 0x84, 0xdf, 0xa8, 0x20, 0x3d, 0xf6, 
0x76, 0xd2, 0xc3, 0x58, 0x16, 0xae, 0x52, 0x87, 
0xaf, 0x80, 0x37, 0x14, 0x08, 0x91, 0xdc, 0x54, 
0x78, 0x0a, 0xed, 0x41, 0xe8, 0xc7, 0x29, 0x83, 
0x68, 0x00, 0xee, 0x6f, 0xf7, 0x59, 0x00, 0x40, 
0x1e, 0x15, 0x60, 0x08, 0x6b, 0x21, 0xcd, 0x0f, 
0xdc, 0x21, 0xc5, 0x59, 0x13, 0x06, 0x11, 0x08, 
0x91, 0x9c, 0x0d, 0x1f, 0xf0, 0xa3, 0x87, 0x80, 
0xdf, 0x03, 0x1b, 0x49, 0x60, 0x50, 0x36, 0x3c, 
0x83, 0xfa, 0x1b, 0xd1, 0x43, 0xe8, 0x2b, 0x12, 
0xaf, 0x17, 0x00, 0xa0, 0xef, 0x05, 0x75, 0xbe, 
0x93, 0xab, 0xa0, 0x8c, 0xd7, 0x30, 0x84, 0xea, 
0xea, 0x88, 0x5a, 0x11, 0x39, 0x4b, 0x04, 0x3f, 
0xf0, 0x15, 0x17, 0x22, 0xde, 0xa4, 0xf8, 0x13, 
0x22, 0x55, 0x53, 0x4b, 0x0f, 0x73, 0xe8, 0xff, 
0x76, 0xc7, 0x9a, 0x5a, 0xb8, 0x79, 0x79, 0x27, 
0xa0, 0x02, 0x52, 0x11, 0x54, 0x00, 0x8f, 0x11, 
0x4b, 0xab, 0x00, 0x2a, 0xc1, 0x15, 0xd1, 0x2a, 
0xa0, 0x38, 0xab, 0x69, 0xe5, 0x7b, 0x48, 0xbe, 
0xd9, 0xf6, 0x84, 0xa7, 0x56, 0xca, 0x82, 0x7b, 
0x41, 0x03, 0x90, 0x3e, 0xc0, 0x34, 0x8a, 0xd7, 
0x0b, 0x30, 0xef, 0xea, 0xb9, 0xc9, 0x9a, 0xeb, 
0x2e, 0xa0, 0xe5, 0xd1, 0x37, 0x49, 0xbd, 0x10, 
0x53, 0x06, 0xc2, 0xe3, 0x74, 0x0f, 0x42, 0x3f, 
0x4e, 0x51, 0x05, 0x00, 0xb0, 0xfa, 0x6e, 0x33, 
0x80, 0x1e, 0x04, 0x10, 0x90, 0x77, 0xb8, 0x2a, 
0x33, 0x40, 0x64, 0x9c, 0xca, 0x48, 0x95, 0x71, 
0x8a, 0x0a, 0x08, 0x04, 0x8c, 0x0b, 0x08, 0x2a, 
0x20, 0x10, 0x19, 0x05, 0x12, 0xab, 0x17, 0xa4, 
0x0f, 0xf4, 0xbd, 0x80, 0x15, 0xe6, 0x45, 0xd1, 
0x7a, 0xe4, 0xaf, 0x47, 0x3a, 0x7e, 0x6b, 0x99, 
0x61, 0x86, 0x19, 0x66, 0x98, 0x61, 0x86, 0x19, 
0xd9, 0x1e, 0xbf, 0x01, 0x5b, 0x58, 0xee, 0x4f, 
0xa7, 0x3d, 0xf0, 0xa2, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *ex_gatcher_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_ex_gatcher_png = new wxImage();
	if (!img_ex_gatcher_png || !img_ex_gatcher_png->IsOk())
	{
		wxMemoryInputStream img_ex_gatcher_pngIS(ex_gatcher_png_data, sizeof(ex_gatcher_png_data));
		img_ex_gatcher_png->LoadFile(img_ex_gatcher_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_ex_gatcher_png;
}
#define ex_gatcher_png_img ex_gatcher_png_img()

static wxBitmap *ex_gatcher_png_bmp()
{
	static wxBitmap *bmp_ex_gatcher_png;
	if (!bmp_ex_gatcher_png || !bmp_ex_gatcher_png->IsOk())
		bmp_ex_gatcher_png = new wxBitmap(*ex_gatcher_png_img);
	return bmp_ex_gatcher_png;
}
#define ex_gatcher_png_bmp ex_gatcher_png_bmp()

static wxIcon *ex_gatcher_png_ico()
{
	static wxIcon *ico_ex_gatcher_png;
	if (!ico_ex_gatcher_png || !ico_ex_gatcher_png->IsOk())
	{
		ico_ex_gatcher_png = new wxIcon();
		ico_ex_gatcher_png->CopyFromBitmap(*ex_gatcher_png_bmp);
	}
	return ico_ex_gatcher_png;
}
#define ex_gatcher_png_ico ex_gatcher_png_ico()

#endif // EX_GATCHER_PNG_H
